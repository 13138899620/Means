<?php
namespace Home\Controller;
use Think\Controller;
class IndexController extends Controller {

    public function index(){
    	if (isMobile())
    		$phone = 1;
    	else
    		$phone = 0;
    	//3天前
    	$strtime = date('Y-m-d H:i:s', mktime(-3*24));
        $t = strtotime($strtime);
    	if(IS_POST){
    		$search = I('request.search');
    		if(empty($search)){
    			$this->error('请填写产品名称');
    		}
    		$where = "status = 1 and ctime > ".$t." and title LIKE '%".$search."%'";
    	}else{
    		$where = "status = 1 and ctime > ".$t;
    	}

    	
    	
    	$Good = M('Goods'); // 实例化User对象
    	$count      = $Good->where($where)->count();// 查询满足要求的总记录数
    	$Page       = new \Think\Page($count,40);// 实例化分页类 传入总记录数和每页显示的记录数(25)
    	$show       = $Page->show();// 分页显示输出
    	// 进行分页数据查询 注意limit方法的参数要使用Page类的属性
    	$goods = $Good->where($where)->order('id desc')->limit($Page->firstRow.','.$Page->listRows)->select();

		
    	$this->assign('goods',$goods);// 赋值数据集
    	$this->assign('page',$show);// 赋值分页输出

    	if($phone){
    		$this->display('phone');	
    	}else{
    		$this->display();
    	}
    	
    }

    public function test(){
    	// current time
    	echo date('h:i:s') . "\n";
    	
    	// sleep for 10 seconds
    	usleep(10000000);
    	
    	// wake up !
    	echo date('h:i:s') . "\n";
//         $strtime = date('Y-m-d H:i:s', mktime(-3*24));
//         echo strtotime($strtime);
    	// $url='http://shop.m.taobao.com/shop/coupon.htm?activity_id=875ac399503e46aca9ddb8f3730ce9e3&seller_id=1712116218';
    	// $html = http_get_content($url);
    	// //echo $html;
    	// preg_match('/[r][e][s][t]\">\d*/', $html, $rest);
    	// dump($rest);
    	// if(empty($rest))
    	// 	echo 1;
    	// preg_match_all('/([0-9]{3}[1-9]|[0-9]{2}[1-9][0-9]|[0-9][1-9][0-9]{2}|[1-9][0-9]{3})-(((0[13578]|1[02])-(0[1-9]|[12][0-9]|3[01]))|((0[469]|11)-(0[1-9]|[12][0-9]|30))|(02-(0[1-9]|[1][0-9]|2[0-8])))/', $html, $effectdate);
    	// //preg_match('/<span class="rest">\d*</span>/', $html, $rest);
    	// dump($effectdate[0][0]);
    	// dump($effectdate[0][1]);

    	// $restnum = explode(">",$rest[0]);
    	// dump($restnum[1]);
    	// preg_match('/<dt>\d*/', $html, $quan);
    	// $quanprice = explode("<dt>",$quan[0]);
    	// dump($quanprice[1]);

    }
    public function upquan(){
    	$month = date('m',time());
    	$day = date('d',time());
    	$year = date('Y',time());
    	$daystime=mktime(0, 0, 01, $month, $day, $year);
    	$dayetime=mktime(23, 59, 59, $month, $day, $year);
    	$nowday = $daystime." < ctime AND ctime < ".$dayetime;
    	
    	//首先判断当天的最小id
    	$min = M('Goods')->where($nowday)->order('id asc')->find();
    	if(empty($min)){
    		exit;
    	}

    	//获取数据库的最小id
    	$minconf = M('Config')->where("k = 'minid'")->find();

    	//比较两者是否一致
    	if($minconf['v'] == $min['id']){

			//获取现在的更新id
    		$nowconf = M('Config')->where("k = 'nowid'")->find();

    		if($nowconf['v'] > $min['id']){
    			//可以进行更新下一个id任务
    			$needupid = $nowconf['v'] - 1;
    			$needup = M('Goods')->where("id = $needupid")->find();
    			$quanurl = $needup['quanurl'];
    			
    			$nowdata['id'] = $nowconf['id'];
    			$nowdata['v'] = $needupid;
    			M('Config')->save($nowdata);
    			
    			if($needup['status'] == 0){
    				exit;
    			}
    		}else{
    			//需要重置更新任务 从当前的最大id开始更新
    			//顺遍更新nowid
    			$max = M('Goods')->where($nowday)->order('id desc')->find();    			
    			$quanurl = $max['quanurl'];    			
    			$needupid = $max['id'];
    			
    			$nowdata['id'] = $nowconf['id'];
    			$nowdata['v'] = $max['id'];
    			M('Config')->save($nowdata);
    			
    			if($max['status'] == 0){
    				exit;
    			}
    		}

    		//开始更新优惠券信息
    		$data['id'] = $needupid;
    		$url = $quanurl;
    		$html = http_get_content($url);
    		 
    		preg_match('/[r][e][s][t]\">\d*/', $html, $rest);
    		if(empty($rest)){
    			$data['status'] = 0;
    			$res = M('Goods')->save($data);

    			exit;
    		}
    		 
    		preg_match_all('/([0-9]{3}[1-9]|[0-9]{2}[1-9][0-9]|[0-9][1-9][0-9]{2}|[1-9][0-9]{3})-(((0[13578]|1[02])-(0[1-9]|[12][0-9]|3[01]))|((0[469]|11)-(0[1-9]|[12][0-9]|30))|(02-(0[1-9]|[1][0-9]|2[0-8])))/', $html, $effectdate);
    		if(empty($effectdate)){
    			$data['status'] = 0;
    			$res = M('Goods')->save($data);
    			exit;
    		}
    		$data['datestart'] = strtotime($effectdate[0][0]);
    		$data['dateend'] = strtotime($effectdate[0][1]);
    		 
    		$restnum = explode(">",$rest[0]);
    		$data['restnum'] = ($restnum[1]);
    		preg_match('/<dt>\d*/', $html, $quan);
    		if(empty($quan)){
    			$data['status'] = 0;
    			$res = M('Goods')->save($data);

    			exit;
    		}
    		$quanprice = explode("<dt>",$quan[0]);
    		$data['quanprice'] = ($quanprice[1]);
    		
    		$res = M('Goods')->save($data);
   			

    	}else{
    		//更新数据最小id
    		$mindata['id'] = $minconf['id'];
    		$mindata['v'] = $min['id'];
    		$res = M('Config')->save($mindata);
    		dump($res);
    	}
		dump($res);
    	exit;
    }
    public function upquanold(){
    	$month = date('m',time());
    	$day = date('d',time());
    	$year = date('Y',time());
    	$daystime=mktime(0, 0, 01, $month, $day, $year);
    	$dayetime=mktime(23, 59, 59, $month, $day, $year);
    	$nowday = $daystime." < ctime AND ctime < ".$dayetime;
    	 
    	//首先判断当天的最小id
    	$min = M('Goods')->where($nowday)->order('id asc')->find();
    	//获取数据库的最小id
    	$minconf = M('Config')->where("k = 'minid'")->find();
    	//比较两者是否一致
    	if($minconf['v'] == $min['id']){
    		//获取现在的更新id
    		$nowconf = M('Config')->where("k = 'nowid'")->find();
    		if($nowconf['v'] > $min['id']){
    			//可以进行更新下一个id任务
    			$needupid = $nowconf['v'] - 1;
    			$needup = M('Goods')->where("id = $needupid")->find();
    			$quanurl = $needup['quanurl'];
    			 
    			$nowdata['id'] = $nowconf['id'];
    			$nowdata['v'] = $needupid;
    			M('Config')->save($nowdata);
    		}else{
    			//需要重置更新任务 从当前的最大id开始更新
    			//顺遍更新nowid
    			$max = M('Goods')->where($nowday)->order('id desc')->find();
    			$quanurl = $max['quanurl'];
    			$needupid = $max['id'];
    			 
    			$nowdata['id'] = $nowconf['id'];
    			$nowdata['v'] = $max['id'];
    			M('Config')->save($nowdata);
    			//当前更新id和当前最小id一致。这个时候就不更新了.
    		}
    
    		//开始更新优惠券信息
    		$data['id'] = $needupid;
    		$url = $quanurl;
    		$html = http_get_content($url);
    		 
    		preg_match('/[r][e][s][t]\">\d*/', $html, $rest);
    		if(empty($rest)){
    			$data['status'] = 0;
    			$res = M('Goods')->save($data);
    			sleep(300);
    			$this->redirect('Home/Index/upquan');
    			exit;
    		}
    		 
    		preg_match_all('/([0-9]{3}[1-9]|[0-9]{2}[1-9][0-9]|[0-9][1-9][0-9]{2}|[1-9][0-9]{3})-(((0[13578]|1[02])-(0[1-9]|[12][0-9]|3[01]))|((0[469]|11)-(0[1-9]|[12][0-9]|30))|(02-(0[1-9]|[1][0-9]|2[0-8])))/', $html, $effectdate);
    		if(empty($effectdate)){
    			$data['status'] = 0;
    			$res = M('Goods')->save($data);
    			exit;
    		}
    		$data['datestart'] = strtotime($effectdate[0][0]);
    		$data['dateend'] = strtotime($effectdate[0][1]);
    		 
    		$restnum = explode(">",$rest[0]);
    		$data['restnum'] = ($restnum[1]);
    		preg_match('/<dt>\d*/', $html, $quan);
    		if(empty($quan)){
    			$data['status'] = 0;
    			$res = M('Goods')->save($data);
    			sleep(300);
    			$this->redirect('Home/Index/upquan');
    			exit;
    		}
    		$quanprice = explode("<dt>",$quan[0]);
    		$data['quanprice'] = ($quanprice[1]);
    
    		$res = M('Goods')->save($data);
    
    		if($nowconf['v'] == $min['id']){
    			exit;
    		}
    		 
    
    	}else{
    		//更新数据最小id
    		$mindata['id'] = $minconf['id'];
    		$mindata['v'] = $min['id'];
    		M('Config')->save($mindata);
    
    	}
    	//暂停 进行下一个循环
    	sleep(300);
    	$this->redirect('Home/Index/upquan');
    	exit;
    }
	public function po(){
		$data['goodurl'] = $goodurl = $_POST['goodurl'];
		$data['goodid'] = $goodid = $_POST['goodid'];
		$data['quanurl'] = $quanurl = $_POST['quanurl'];
		$data['key'] = $good = $_POST['key'];
		if(C('postkey') != $data['key']){
			$ajaxdata['status'] = 0;
			$ajaxdata['info'] = 'error key';
			$this->ajaxReturn($ajaxdata);
		}		
		$ajaxdata['status'] = 0;
		//$goodid = '530473307787';
		if(empty($goodurl) || empty($goodid) || empty($quanurl)){
			$ajaxdata['info'] = 'error param';
			$this->ajaxReturn($ajaxdata);
		}
		//获取淘宝商品信息
		Vendor('taobaoapi.TopSdk');
		date_default_timezone_set('Asia/Shanghai');
		Vendor('taobaoapi.top.TopClient');
		$c = new \Vendor\taobaoapi\top\TopClient;
		$c->appkey = C('appkey');
		$c->secretKey = C('secretKey');

		$req = new \Vendor\taobaoapi\top\request\TbkItemInfoGetRequest();
		$req->setFields("num_iid,title,pict_url,small_images,reserve_price,zk_final_price,user_type,provcity,item_url");
		$req->setPlatform("1");
		$req->setNumIids($goodid);
		$resp = $c->execute($req);
		
		$res = (array)$resp;
		$result = (array)$res['results'];
		$n_tbk_item = (array)$result['n_tbk_item'];
// 		dump($n_tbk_item);
// 		exit;
		
		//获取优惠券信息
		$data['status'] = 1;
		$html = http_get_content($quanurl);
		//获取剩余优惠券数
		preg_match('/[r][e][s][t]\">\d*/', $html, $rest);
		if(empty($rest)){

			$ajaxdata['info'] = 'no quan';
			$this->ajaxReturn($ajaxdata);
		}
		$restnum = explode(">",$rest[0]);
		$data['restnum'] = ($restnum[1]);
		//获取有效日期
		preg_match_all('/([0-9]{3}[1-9]|[0-9]{2}[1-9][0-9]|[0-9][1-9][0-9]{2}|[1-9][0-9]{3})-(((0[13578]|1[02])-(0[1-9]|[12][0-9]|3[01]))|((0[469]|11)-(0[1-9]|[12][0-9]|30))|(02-(0[1-9]|[1][0-9]|2[0-8])))/', $html, $effectdate);
		if(empty($effectdate)){

			$ajaxdata['info'] = 'no quan';
			$this->ajaxReturn($ajaxdata);
			
		}
		$data['datestart'] = strtotime($effectdate[0][0]);
		$data['dateend'] = strtotime($effectdate[0][1]);
		 
		//获取优惠券价格
		preg_match('/<dt>\d*/', $html, $quan);
		if(empty($quan)){

			$ajaxdata['info'] = 'no quan';
			$this->ajaxReturn($ajaxdata);
		}
		$quanprice = explode("<dt>",$quan[0]);
		$data['quanprice'] = ($quanprice[1]);
		
		
		$data['title'] = $n_tbk_item['title'];
		$data['img'] = $n_tbk_item['pict_url'];
		$data['price'] = $n_tbk_item['zk_final_price'];
		$data['ctime'] = time();
		$exist = M('Goods')->where("goodid = $goodid")->find();
		if($exist){
			$data['id'] = $exist['id'];
			$r = M('Goods')->save($data);
		}else{
			$r = M('Goods')->add($data);
		}
		
		if($r !== false){
			$ajaxdata['status'] = 1;
			$ajaxdata['info'] = 'success';
			$this->ajaxReturn($ajaxdata);
		}else{
			$ajaxdata['info'] = 'database error';
			$this->ajaxReturn($ajaxdata);
		}
		
	}

}