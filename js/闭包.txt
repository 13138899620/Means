function a(){
var i=0;
function b(){
alert(++i);
}
return b;
}
var c = a();
c();

这段代码有两个特点：
1、函数b嵌套在函数a内部；
2、函数a返回函数b。

这样在执行完var c=a()后，变量c实际上是指向了函数b，再执行c()后就会弹出一个窗口显示i的值(第一次为1)。
当函数a的内部函数b被函数a外的一个变量引用的时候，就创建了一个闭包。


1.函数嵌套函数


2.函数内部可以引用外部的参数和变量


3.参数和变量不会被垃圾回收机制回收


缺点：占用内存，容易造成内存泄漏


var name = "The Window";
    var object = {
        name: "My Object",
        getNameFunc:function() {
            return function () {
                return this.name;
            }
        }
    }

alert(object.getNameFunc()());  //The Window


var name = "The Window";
    var object = {
        name: "My Object",
        getNameFunc:function() {
            var that=this;
            return function () {
                return that.name;
            }
        }
    }

alert(object.getNameFunc()());  //My Object"