黑盒测试也称功能测试或数据驱动测试，它是在已知产品所应具有的功能，通过测试来检测每个功能是否都能正常使用，在测试时，把程序看作一个不能打开的黑盆子，在完全不考虑程序内部结构和内部特性的情况下，测试者在程序接口进行测试，它只检查程序功能是否按照需求规格说明书的规定正常使用，程序是否能适当地接收输入数锯而产生正确的输出信息，并且保持外部信息（如数据库或文件）的完整性。


黑盒测试并不是白盒测试的替代品，而是用于辅助白盒测试发现其他类型的错误。
黑盒测试试图发现以下类型的错误：
1.功能错误或遗漏
2.界面错误
3.数据结构或外部数据库访问错误
4.性能错误
5.初始化和终止错误


白盒测试在测试的早期采用，而黑盒测试主要用于测试的后期。
黑盒测试故意不考虑控制结构，而是注意信息域。

1.所设计的测试用例能够减少达到合理测试所需的附加测试用例数；
2.所设计的测试用例能够告知某些类型错误的存在或不存在，而不是仅仅与特定测试相关的错误用于软件验证。






白盒测试也称结构测试和逻辑驱动测试，他是知道产品的内部过程，可以通过测试来检测产品内部动作是否按照规格说明书的规定正常进行，按照程序内部的结构测试程序，检验程序中每一条通路是否都有按照预定的要求正确工作，而不顾他的功能，白盒测试的主要方法有逻辑驱动、基路测试等，主要


白盒”法全面了解程序内部逻辑结构、对所有逻辑路径进行测试。


白盒测试主要是想对程序模块进行如下检查：???

1、对程序模块的所有独立的执行路径至少测试一遍。??




  
2、对所有的逻辑判定，取“真”与取“假”的两种情况都能至少测一遍。??
3、在循环的边界和运行的界限内执行循环体。??
4、测试内部数据结构的有效性?