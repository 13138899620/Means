1.抽象成员必须标记为abstract,并且不能有任何实现。
2.抽象成员必须在抽象类中。
3.抽象类不能被实例化

4.子类继承抽象类后，必须把父类中的所有抽象成员都重写。

（除非子类也是一个抽象类，则可以不重写）
5.抽象成员的访问修饰符不能是private
6.在抽象类中可以包含实例成员。
并且抽象类的实例成员可以不被子类实现

7.抽象类是有构造函数的。虽然不能被实例化。


8、如果父类的抽象方法中有参数，那么。继承这个抽象父类的子类在重写父类的方法的时候必须传入对应的参数。

如果抽象父类的抽象方法中有返回值，那么子类在重写这个抽象方法的时候 也必须要传入返回值。


======
如果父类中的方法有默认的实现，并且父类需要被实例化，这时可以考虑将父类定义成一个普通类，用虚方法来实现多态。

如果父类中的方法没有默认实现，父类也不需要被实例化，则可以将该类定义为抽象类。



只有用virtual修饰的方法才能进行重写
虚方法 
virtual override
override主要对基类的方法和徐方法进行重写

Virtual 关键字允许在派生类中重写这些对象，默认情况下，
方法是非虚拟的，不可以重写非虚方法，
virtual关键字不可以与static、abstract、private、override一起使用。
Virtual关键字又是和override紧密不可分的，如果要实现Virtual方法就必须要使用override或new关键字（new和override产生的机理不同）。
Override主要用来对基类的方 法和虚方法进行重写。


隐藏子类方法
new 

new关键字主要用来区别派生类和基类同名方法的选择问题，通过隐藏基类方法，达到使编译器调用正确的方法的目的。
