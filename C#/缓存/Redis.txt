Redis是一个开源，先进的key-value(键值对）存储，并且勇于构建高性能，可扩展的Web应用程序的完美解决方案

Redis和Memcached的对比
1.Redis数据库完全在内存中，使用磁盘仅用于持久性
2.相对比较多的键值对存储，redis拥有更加丰富的数据模型，Redis提供五种数据类型:包括string(字符串)、list(链表)、set(集合)、zset(sorted set --有序集合)和hashs（哈希类型）
3.Redis可以将数据复制到任意数量的从服务器

4.Redis支持数据的持久化，可以将内存中的数据保持在磁盘中，重启的时候可以再次加载进行使用。
5.Redis支持数据的备份，即master-slave模式的数据备份。

Redis优点
1.Redis的执行响应速度非常快,使用标准C写，所有数据都在内存中完成，读写速度分别达到10万/20万
2.支持丰富的数据类型
3.原子性，保证了如果两个客户端同事访问的Redis服务器将获取更新后的值
4.多功能实用工具，Redis是一个多实用的工具，可以在多个用例如缓存，消息，队列实用，任何短暂的数据，应用程序。
5.持久化：对数据的更新采用Copy-on-write技术，可以异步地保存到磁盘上，主要有两种策略，一是根据时间，更新次数的快照（save 300 10 ）二是基于语句追加方式(Append-only file，aof)
6.自动操作：对不同数据类型的操作都是自动的，很安全
7. 快速的主--从复制，官方提供了一个数据，Slave在21秒即完成了对Amazon网站10G key set的复制。
8.redis是一个高性能的key-value数据库，redis的出现，很大程度上补偿了memcached这里key/value存储的不足，在部分场合可以对数据库起到很好的补充作用！

Redis经验
1.要进行Master-slave配置，出现服务故障时可以支持切换
2.在master侧禁用数据持久化，只需在slave上配置数据持久化
3.物理内存+虚拟内存不足，这个时候dump一直死着，时间久了机器挂掉，这个情况就是灾难
4.当Redis物理内存使用超过内存总容量3/5时就比较危险了，就开始做swap,内存碎片大
5.当达到最大内存时，会清空带有过期时间的key，即使key未到过期时间
6.redis与DB同步写的问题，先写DB，后写redis，因为写内存基本没有问题


Redis和Memcached的性能对比

1）性能对比：由于Redis只使用单核，而Memcached可以使用多核，所以平均每一个核上Redis在存储小数据时比Memcached性能更高。而在100k以上的数据中，Memcached性能要高于Redis，虽然Redis最近也在存储大数据的性能上进行优化，但是比起 Memcached，还是稍有逊色。

2）内存使用效率对比：使用简单的key-value存储的话，Memcached的内存利用率更高，而如果Redis采用hash结构来做key-value存储，由于其组合式的压缩，其内存利用率会高于Memcached。

3）Redis支持服务器端的数据操作：Redis相比Memcached来说，拥有更多的数据结构和并支持更丰富的数据操作，通常在Memcached 里，你需要将数据拿到客户端来进行类似的修改再set回去。这大大增加了网络IO的次数和数据体积。在Redis中，这些复杂的操作通常和一般的 GET/SET一样高效。所以，如果需要缓存能够支持更复杂的结构和操作，那么Redis会是不错的选择。



三、Memcache和Redis区别

Redis中，并不是所有的数据都一直存储在内存中的，这是和Memcached相比一个最大的区别。
Redis在很多方面具备数据库的特征，或者说就是一个数据库系统，而Memcached只是简单的K/V缓存。
他们的扩展都需要做集群；实现方式：master-slave、Hash。
在100k以上的数据中，Memcached性能要高于Redis。
如果要说内存使用效率，使用简单的key-value存储的话，Memcached的内存利用率更高，而如果Redis采用hash结构来做key-value存储，由于其组合式的压缩，其内存利用率会高于Memcached。当然，这和你的应用场景和数据特性有关。
如果你对数据持久化和数据同步有所要求，那么推荐你选择Redis，因为这两个特性Memcached都不具备。即使你只是希望在升级或者重启系统后缓存数据不会丢失，选择Redis也是明智的。
Redis和Memcache在写入性能上面差别不大，读取性能上面尤其是批量读取性能上面Memcache更强。
 



四 redis 五种数据类型
1,string(字符串)
string是简单的类型，你可以理解成与Memcached一样的类型，一个key对应一个value，其上支持的操作与Memcached的操作类似，但它的功能更丰富

2.list（双向链表)
list是一个链表结构，主要功能是push，pop,获取一个范围的所独有值等等，之所以说他是双向的，因为它可以在链表左右两边分别操作

3.dict(hash表）
set是集合，和我们数学中的集合概念相似，对集合的操作有添加删除元素，有对多个集合求交并差等操作，操作key理解为集合的名字

4.zset(排序set)
zset是set的一个升级版本，他在set的基础上增加了一个顺序属性，一个属性在添加修改元素的时候可以指定，每次指定后，zset会自动重新按新的值调整顺序，可以对指定键的值进行排序权值的设定，他应用排名模块比较多。

5. Hash类型
Redis能够存储key对多个属性的数据（比如user1.uname user1.passwd），当然，你完成可以把这些属性以json格式进行存储，直接把它当作string类型进行操作，但这样性能上是对影响的，所以redis提出的Hash类型。
